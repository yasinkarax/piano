@use "_variables.sass" as v

body
    background-color: v.$bg-color
    display: flex
    justify-content: center
    align-items: center
    height: 100vh

.piano-head
    @include v.piano-text (v.$piano-head-color, 700, 50px, v.$piano-head-family)

.piano-p
    @include v.piano-text (v.$piano-p-color, 500, 20px , v.$piano-p-family)
    
main
    background-color: v.$piano-bg-color
    width: 98%
    height: 99vh
    padding: 0 10px
    border-radius: 33px
    display: flex
    flex-direction: column
    justify-content: space-around

@media (max-width: 700px )
    main
        width: 98vh
        height: 99vw
        transform: rotate(90deg)


.piano-info
    display: flex
    width: 100%
    padding: 0 20px
    justify-content: space-between

#volume-switch
    height: 100%
    width: 85px
    border-radius: 100%
    background: rgb(238,238,238)
    background: linear-gradient(90deg, rgba(238,238,238,1) 0%, rgba(252,252,252,1) 50%, rgba(219,219,219,1) 100%)
    border-width: 0 0 2px 0
    border-style: solid
    border-color: rgb(209, 209, 209)
    position: relative
    -webkit-box-shadow: 0px 18px 17px 3px rgba(129,129,129,0.48)  
    box-shadow: 0px 12px 17px 3px rgba(129,129,129,0.48) 
    
    
#volume-start
    height: 20px
    width: 4px
    background: rgb(129, 129, 129)
    position: absolute
    top: 5px
    left: 50%
    transform: translate(-50%, 0%)
    border-radius: 10px
/*
// .keys
//     background: v.$keys-bg 
//     border-radius: 21px 
//     padding: 5.37px 
//     width: 100%
//     height: 65%
//     display: flex
//     gap: 5px
//     flex-shrink: 1
//     position: relative
//     &-b
//         position: absolute
//         height: 100%
//         width: 100%
//         button
//             @include v.key-b
            

// [class*= w-]
//     @include v.key-w
    
    
// .keys > button:last-of-type, .keys > button:first-of-type
//     border-radius: 12px 
.piano 
  display: grid
  grid-template-columns: repeat(28, 1fr)
  background: #000
  padding: 10px
  gap: 5px
  align-items: start
  width: 100%
  border-radius: 20px
  margin-inline: auto
  .white-button 
    min-height: 500px
    background: #FFF
    grid-row: 1
    border-radius: 10px
    
    @for $i from 1 through 9
        $columnStart: #{1 + ($i - 1) * v.$wSpan }
        @if $i == 1
            &:nth-child(#{$i})
                grid-column: 1 / span v.$wSpan
        @else
            &:nth-child(#{$i})
                grid-column: $columnStart / span v.$wSpan

    
  .black-button 
    grid-row:1
    height: 50%
    background: black
    border-radius: 0 0 10px 10px
    &:nth-child(1 of .black-button) 
      grid-column:3 / span 2
    
    &:nth-child(2 of .black-button) 
      grid-column:6 / span 2
    
    &:nth-child(3 of .black-button) 
      grid-column:12 / span 2
    
    &:nth-child(4 of .black-button) 
      grid-column:15 / span 2
    
    &:nth-child(5 of .black-button) 
      grid-column:18 / span 2
    
  